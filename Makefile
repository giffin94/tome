# GNU Make solution makefile autogenerated by Premake
# Type "make help" for usage help

ifndef config
  config=debug
endif
export config

PROJECTS := TEngine physfs minilua buildvm luajit2 luasocket fov lpeg luaprofiler tcodimport expatstatic lxp luamd5 luazlib luabitop te4-bzip

.PHONY: all clean help $(PROJECTS)

all: $(PROJECTS)

TEngine: physfs luajit2 fov luasocket luaprofiler lpeg tcodimport lxp expatstatic luamd5 luazlib luabitop te4-bzip
	@echo "==== Building TEngine ($(config)) ===="
	@${MAKE} --no-print-directory -C build -f TEngine.make

physfs: 
	@echo "==== Building physfs ($(config)) ===="
	@${MAKE} --no-print-directory -C build -f physfs.make

minilua: 
	@echo "==== Building minilua ($(config)) ===="
	@${MAKE} --no-print-directory -C build -f minilua.make

buildvm: minilua
	@echo "==== Building buildvm ($(config)) ===="
	@${MAKE} --no-print-directory -C build -f buildvm.make

luajit2: buildvm
	@echo "==== Building luajit2 ($(config)) ===="
	@${MAKE} --no-print-directory -C build -f luajit2.make

luasocket: 
	@echo "==== Building luasocket ($(config)) ===="
	@${MAKE} --no-print-directory -C build -f luasocket.make

fov: 
	@echo "==== Building fov ($(config)) ===="
	@${MAKE} --no-print-directory -C build -f fov.make

lpeg: 
	@echo "==== Building lpeg ($(config)) ===="
	@${MAKE} --no-print-directory -C build -f lpeg.make

luaprofiler: 
	@echo "==== Building luaprofiler ($(config)) ===="
	@${MAKE} --no-print-directory -C build -f luaprofiler.make

tcodimport: 
	@echo "==== Building tcodimport ($(config)) ===="
	@${MAKE} --no-print-directory -C build -f tcodimport.make

expatstatic: 
	@echo "==== Building expatstatic ($(config)) ===="
	@${MAKE} --no-print-directory -C build -f expatstatic.make

lxp: 
	@echo "==== Building lxp ($(config)) ===="
	@${MAKE} --no-print-directory -C build -f lxp.make

luamd5: 
	@echo "==== Building luamd5 ($(config)) ===="
	@${MAKE} --no-print-directory -C build -f luamd5.make

luazlib: 
	@echo "==== Building luazlib ($(config)) ===="
	@${MAKE} --no-print-directory -C build -f luazlib.make

luabitop: 
	@echo "==== Building luabitop ($(config)) ===="
	@${MAKE} --no-print-directory -C build -f luabitop.make

te4-bzip: 
	@echo "==== Building te4-bzip ($(config)) ===="
	@${MAKE} --no-print-directory -C build -f te4-bzip.make

clean:
	@${MAKE} --no-print-directory -C build -f TEngine.make clean
	@${MAKE} --no-print-directory -C build -f physfs.make clean
	@${MAKE} --no-print-directory -C build -f minilua.make clean
	@${MAKE} --no-print-directory -C build -f buildvm.make clean
	@${MAKE} --no-print-directory -C build -f luajit2.make clean
	@${MAKE} --no-print-directory -C build -f luasocket.make clean
	@${MAKE} --no-print-directory -C build -f fov.make clean
	@${MAKE} --no-print-directory -C build -f lpeg.make clean
	@${MAKE} --no-print-directory -C build -f luaprofiler.make clean
	@${MAKE} --no-print-directory -C build -f tcodimport.make clean
	@${MAKE} --no-print-directory -C build -f expatstatic.make clean
	@${MAKE} --no-print-directory -C build -f lxp.make clean
	@${MAKE} --no-print-directory -C build -f luamd5.make clean
	@${MAKE} --no-print-directory -C build -f luazlib.make clean
	@${MAKE} --no-print-directory -C build -f luabitop.make clean
	@${MAKE} --no-print-directory -C build -f te4-bzip.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "   debug"
	@echo "   release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   TEngine"
	@echo "   physfs"
	@echo "   minilua"
	@echo "   buildvm"
	@echo "   luajit2"
	@echo "   luasocket"
	@echo "   fov"
	@echo "   lpeg"
	@echo "   luaprofiler"
	@echo "   tcodimport"
	@echo "   expatstatic"
	@echo "   lxp"
	@echo "   luamd5"
	@echo "   luazlib"
	@echo "   luabitop"
	@echo "   te4-bzip"
	@echo ""
	@echo "For more information, see http://industriousone.com/premake/quick-start"
